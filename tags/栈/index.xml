<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>栈 - 标签 - zyz的技术博客</title>
    <link>https://YouZhiZheng.github.io/tags/%E6%A0%88/</link>
    <description>栈 - 标签 | zyz的技术博客</description>
    <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>youzhizheng9@gmail.com (zyz)</managingEditor>
      <webMaster>youzhizheng9@gmail.com (zyz)</webMaster><lastBuildDate>Sun, 04 May 2025 16:01:45 &#43;0800</lastBuildDate><atom:link href="https://YouZhiZheng.github.io/tags/%E6%A0%88/" rel="self" type="application/rss+xml" /><item>
  <title>394. 字符串解码</title>
  <link>https://YouZhiZheng.github.io/posts/84d7cc5/</link>
  <pubDate>Sun, 04 May 2025 16:01:45 &#43;0800</pubDate>
  <author>zyz</author>
  <guid>https://YouZhiZheng.github.io/posts/84d7cc5/</guid>
  <description><![CDATA[题目思路该题就是给定一个编码后的字符串，然后返回解码后的字符串。
由题可知要处理嵌套的情况，即要先解决内层的$k[encoded_string]$，再解决外层，即后进先出，很适合用栈来解决。而且其结构为$k[encoded_string]$，很适合用双栈来解决，一个为数字栈用来存储重复几次，一个为字符串栈用来存储每一层进入 $[$ 时，之前构造的字符串。
代码1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 class Solution { public: string decodeString(string s) { string cur_str, pre_str, temp; stack&lt;int&gt; s_n; // 数字栈，存储重复几次 stack&lt;string&gt; s_s; // 字符串栈，存储前面的字符串 for (size_t i = 0; i &lt; s.]]></description>
</item>
</channel>
</rss>
